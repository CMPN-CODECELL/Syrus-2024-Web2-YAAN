<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="/stylesheets/index.css">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@48,400,0,0" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@48,400,1,0" />
    
  <title>YARN</title>
  <link rel="icon" type="image/x-icon" href="/assets/yarnlogo.ico">


</head>

<body>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
    crossorigin="anonymous"></script>

  <nav class="navbar navbar-expand-lg" style="background-color: #3498db;">
    <div class="container-fluid">
      <a class="navbar-brand" href="/" style="color:white; padding-bottom: 0rem;">
        <img src="/assets/yarnlogo.png" href="/" alt="Logo" width="40" height="40"
          class="d-inline-block align-text-center">YARN
      </a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent"
        aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav me-auto mb-2 mb-lg-0">

          <li class="nav-item">
            <a class="nav-link" href="/statistics" style="color:white;">Statistics</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/add-doctor" style="color:white;">Add Doc</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/journal" style="color:white;">Journal</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/forum" style="color:white;">Forum</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/todo" style="color:white;">Calender</a>
          </li>
          <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false"
              style="color:white;">
              Account
            </a>
            <ul class="dropdown-menu">
              <li><a class="dropdown-item" href="/edit-profile">Edit Profile</a></li>
              <li>
                <a class="dropdown-item" href="/logout"
                  onclick="event.preventDefault(); document.getElementById('logout-form').submit();">Log
                  Out</a>
                <form id="logout-form" action="/logout?_method=DELETE" method="POST" style="display: none;"></form>
              </li>
              <li><a class="dropdown-item" href="#" onclick="deleteAccount()">Delete Account</a></li>
            </ul>
          </li>
        </ul>
        <!-- Add SOS button -->
        <form action="/sendSOS" method="post">
          <button type="submit" id="sosButton" class="btn btn-danger mx-2">SOS</button>
        </form>
      </div>
  </nav>

  <h3 class="Title" style="text-align: center; ">Welcome to <span id="Yarn">YARN</span><br>
    <%= user.username %>
  </h3>
<div class="rowcards" style="margin-top: 20px;">
  <div class="card" style="width: 18rem; background: white;">
    <img src="/assets/MEMORY GAME.jpg" class="card-img-top" alt="">
    <div class="card-body">
      <h5 class="card-title">Memory Game</h5>
      <p class="card-text">Unlocking nostalgia one match at a time â€“ where the only thing sharper than our memory cards is our wit! </p>
      <a href="/memory-games" class="btn btn-primary" style="display:grid; text-align: center;">Play</a>
    </div>
  </div>

  <div class="card" style="width: 18rem; background: white;">
    <img src="/assets/FORUM.jpg" class="card-img-top" alt="">
    <div class="card-body">
      <h5 class="card-title">Forum</h5>
      <p class="card-text">Where Alzheimer's warriors unite to share stories, swap strategies, and sprinkle a dash of humour on this challenging journey.</p>
      <a href="/forum" class="btn btn-primary" style="display:grid; text-align: center;">Forum </a>
    </div>
  </div>

  <div class="card" style="width: 18rem; background: white;">
    <img src="/assets/JOURNAL.jpg" class="card-img-top" alt="">
    <div class="card-body">
      <h5 class="card-title">Journal</h5>
      <p class="card-text">Join the journal journey â€“ where each entry is a triumph over forgetfulness and a celebration of the indomitable human spirit</p>
      <a href="/journal" class="btn btn-primary" style="display:grid; text-align: center;">Journal</a>
    </div>
  </div>

  <div class="card" style="width: 18rem; background: white;">
    <img src="/assets/DOCTORS.jpg" class="card-img-top" alt="">
    <div class="card-body">
      <h5 class="card-title">Add Doctors</h5>
      <p class="card-text">Connect with leading specialists and professionals guide you through the labyrinth of memory challenges.</p>
      <a href="/add-doctor" class="btn btn-primary" style="display:grid; text-align: center;">Add Doctor</a>
    </div>
  </div>
</div>


  <!-- <div class="elements">
    <div class="card" style="transform: translateZ(0);" >
      <h3 class="profile-title">Profile Details</h3>
      <div class="profile-info">
       
        <h2 class="profile-item">Name: <%= user.username %>
        </h2>
        <h2 class="profile-item">Email: <%= user.email %>
        </h2>
        <h2 class="profile-item">Phone no: <%= user.phone %>
        </h2>
      
        <h2 class="profile-item">Emergency Contact: <%= user.emergencyContact.name %>
        </h2>

      </div>
    </div>

   <div class="card" style="transform: translateZ(0);">
    <h3 class="profile-title">Upcoming Events:</h3>
    <div class="profile-info">
      <ul>
        <% upcomingEvents.forEach(event=> { %>
          <li>
            <%= event.event %> - <%= event.date %>
          </li>
          <% }); %>
      </ul>
    </div>

   </div>
  </div> -->


  <button class="chatbot-toggler">
    <span class="material-symbols-rounded">mode_comment</span>
    <span class="material-symbols-outlined">close</span>
  </button>
  <div class="chatbot">
    <header>
      <h2>Chatbot</h2>
      <span class="close-btn material-symbols-outlined">close</span>
    </header>
    <ul class="chatbox">
      <li class="chat incoming">
        <span class="material-symbols-outlined">smart_toy</span>
        <p>Hi there ðŸ‘‹<br>How can I help you today?</p>
      </li>
    </ul>
    <div class="chat-input">
      <textarea placeholder="Enter a message..." spellcheck="false" required></textarea>
      <span id="send-btn" class="material-symbols-rounded">send</span>
    </div>
  </div>   

  <script>
    const chatbotToggler = document.querySelector(".chatbot-toggler");
const closeBtn = document.querySelector(".close-btn");
const chatbox = document.querySelector(".chatbox");
const chatInput = document.querySelector(".chat-input textarea");
const sendChatBtn = document.querySelector(".chat-input span");

let userMessage = null; // Variable to store user's message
const API_KEY = "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"; // Paste your API key here
const inputInitHeight = chatInput.scrollHeight;

const createChatLi = (message, className) => {
    // Create a chat <li> element with passed message and className
    const chatLi = document.createElement("li");
    chatLi.classList.add("chat", `${className}`);
    let chatContent = className === "outgoing" ? `<p></p>` : `<span class="material-symbols-outlined">smart_toy</span><p></p>`;
    chatLi.innerHTML = chatContent;
    chatLi.querySelector("p").textContent = message;
    return chatLi; // return chat <li> element
}

const generateResponse = (incomingChatLi) => {
    const API_URL = "https://api.openai.com/v1/chat/completions";
    const messageElement = incomingChatLi.querySelector("p");

    // Define the properties and message for the API request
    const requestOptions = {
        method: "POST",
        headers: {
            "Content-Type": "application/json",
            "Authorization": `Bearer ${API_KEY}`
        },
        body: JSON.stringify({
            model: "gpt-3.5-turbo",

messages: [
  {role: "user",content: userMessage + "assume you are my medical assistant and I am Alzheimer's patient, and my name is " + '<%= user.username %>, always greet me at start.',},],        })
    }
   
    // Send POST request to API, get response and set the reponse as paragraph text
    fetch(API_URL, requestOptions)
    .then(res => res.json())
    .then(data => {
        messageElement.textContent = data.choices[0].message.content.trim();
    })
    .catch(() => {
        messageElement.textContent = "Oops! Something went wrong. Please try again.";
    })
    .finally(() => chatbox.scrollTo(0, chatbox.scrollHeight));

}

const handleChat = () => {
    userMessage = chatInput.value.trim(); // Get user entered message and remove extra whitespace
    if(!userMessage) return;

    // Clear the input textarea and set its height to default
    chatInput.value = "";
    chatInput.style.height = `${inputInitHeight}px`;

    // Append the user's message to the chatbox
    chatbox.appendChild(createChatLi(userMessage, "outgoing"));
    chatbox.scrollTo(0, chatbox.scrollHeight);
    
    setTimeout(() => {
        // Display "Thinking..." message while waiting for the response
        const incomingChatLi = createChatLi("Thinking...", "incoming");
        chatbox.appendChild(incomingChatLi);
        chatbox.scrollTo(0, chatbox.scrollHeight);
        generateResponse(incomingChatLi);
    }, 600);
}

chatInput.addEventListener("input", () => {
    // Adjust the height of the input textarea based on its content
    chatInput.style.height = `${inputInitHeight}px`;
    chatInput.style.height = `${chatInput.scrollHeight}px`;
});

chatInput.addEventListener("keydown", (e) => {
    // If Enter key is pressed without Shift key and the window 
    // width is greater than 800px, handle the chat
    if(e.key === "Enter" && !e.shiftKey && window.innerWidth > 800) {
        e.preventDefault();
        handleChat();
    }
});

sendChatBtn.addEventListener("click", handleChat);
closeBtn.addEventListener("click", () => document.body.classList.remove("show-chatbot"));
chatbotToggler.addEventListener("click", () => document.body.classList.toggle("show-chatbot"));
  </script>
  <script src="/scripts/index.js"></script>

</body>

</html>